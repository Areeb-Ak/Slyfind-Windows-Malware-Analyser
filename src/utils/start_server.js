import { exec } from 'child_process'

// Define an asynchronous function to execute the external process
async function start_flask(exePath, changePath) {
  process.chdir(changePath)
  return new Promise((resolve, reject) => {
    const childProcess = exec(exePath)

    childProcess.on('exit', (code, signal) => {
      if (code === 0) {
        resolve()
      } else {
        reject(`Process exited with code ${code} and signal ${signal}`)
      }
    })

    childProcess.on('error', (err) => {
      reject(err.message)
    })

    childProcess.stdout.on('data', (data) => {
      console.log(`stdout: ${data}`)
    })

    childProcess.stderr.on('data', (data) => {
      console.error(`stderr: ${data}`)
    })
  })
}

export default start_flask
