import { exec } from 'child_process'
import { join } from 'node:path'
const { app } = require('electron')

// Now you can use `pythonScriptPath` to access your Python script

const plyse = async (pdfpath) => {
  const appPath = app.getAppPath('userData')
  let pythonScriptPath = join(appPath, 'extraResources', 'pdfscan', 'pdfscan.py').replace(
    /\\app\.asar\\/g,
    '\\'
  )

  let pdf_out_path = join(appPath, 'extraResources', 'pdfscan', 'pdfout.json').replace(
    /\\app\.asar\\/g,
    '\\'
  )

  let rf_pkl_path = join(appPath, 'extraResources', 'pdfscan', 'pdf_rfscaled.pkl').replace(
    /\\app\.asar\\/g,
    '\\'
  )

  let encode_pkl_path = join(appPath, 'extraResources', 'pdfscan', 'pdf_encoder.pkl').replace(
    /\\app\.asar\\/g,
    '\\'
  )

  let scale_pkl_path = join(appPath, 'extraResources', 'pdfscan', 'pdf_scaled.pkl').replace(
    /\\app\.asar\\/g,
    '\\'
  )

  const command = `python3 ${pythonScriptPath} ${pdfpath} --output_json_path ${pdf_out_path} --pkl ${rf_pkl_path};${encode_pkl_path};${scale_pkl_path}`
  return new Promise((resolve, reject) => {
    exec(command, (error, stdout, stderr) => {
      if (error) {
        console.error(`Error: ${error.message}`)
        reject(error.message)
        return
      }
      if (stderr) {
        console.error(`stderr: ${stderr}`)
        reject(stderr)
        return
      }
      resolve(stdout)
    })
  })
}

export default plyse
