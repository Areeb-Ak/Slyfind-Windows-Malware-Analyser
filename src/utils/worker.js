import { parentPort } from 'worker_threads'
import { exec } from 'child_process'
import { join } from 'path'
import { promises as fs } from 'fs'

// Listening for messages from the main thread
parentPort.on('message', async (command_help) => {
  try {
    console.log('Command ( Worker ):', `${command_help.split('^')[1]} extraction\n`)
    const { stdout } = exec(
      `python3 v3/vol.py -f ${command_help.split('^')[0]} -r json windows.${
        command_help.split('^')[1]
      }`
    )

    const outputFile = join(__dirname, '../../src/output', `${command_help.split('^')[1]}.json`)

    await fs.writeFile(outputFile, stdout)
  } catch (error) {
    console.log(error)
  } finally {
    parentPort.postMessage('done')
  }
})
