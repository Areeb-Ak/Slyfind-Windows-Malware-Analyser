import { exec } from "child_process";
import { join } from "node:path";
const runcap = async (command) => {
  console.log("current directory: ",process.cwd())
  console.log("Executing Command :", command);
  return new Promise((resolve, reject) => {
    exec(command, (error, stdout, stderr) => {
      if (error) {
        // console.error(`Error: ${error.message}`);
        reject(error.message);
        return;
      }
      console.log("Stdout",stdout);
      if (stderr) {
        // console.error(`stderr: ${stderr}`);
        reject(stderr);
        return;
      }
      resolve();
    });
  });
};

const capturecap = async (filepath, duration) => {
  const output_path = join(__dirname, "../../src/output");
  const tshark_path = join(__dirname, "../../tshark/tshark.exe");
  if (!filepath) {
    try{
    filepath = join(output_path, "custom.pcap");
    await runcap(`${tshark_path} -i Wi-Fi -a duration:${duration} -w ${filepath}`);
    } catch  {}
  }
  try{
  process.chdir(join(__dirname, "../../cic_flow/bin"));
  await runcap(`cfm.bat ${filepath} ${output_path}`);
  } catch {}
  try{
  await runcap(
    `python ../../src/python/running_3.py ${filepath} ${output_path} ${duration}`
  );} catch{}
};

export default capturecap;
